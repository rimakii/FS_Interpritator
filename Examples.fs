module Examples

open Parser
open Eval

let runAllExamples () =
    let examples = [
        // ??????? ????????
        "(+ 1 2)", "3"
        "(let x 5 (* x x))", "25"
        
        // ???????? ? ?????????
        "(letrec fact (lambda (n) (if (= n 0) 1 (* n (fact (- n 1))))) (fact 5))", "120"
        
        // ??????? ??????????
        "(let lazy-val (delay (+ 1 2)) (force lazy-val)", "3"
        
        // ?????? ?? ????????
        "(let lst (cons 1 (cons 2 (cons 3 ()))) (car (cdr lst))", "2"
        
        // ???????? ????-?????
        "(let fh (open-input-file \"test.txt\") (read-line fh))", "?????????? ?????? ?????? ?????"
    ]
    
    examples |> List.iter (fun (code, expected) ->
        try
            let result = eval globalEnv (parse code)
            printfn "Test: %s\nExpected: %s\nResult: %A\n" code expected result
        with ex ->
            printfn "Test failed: %s\nError: %s\n" code ex.Message)